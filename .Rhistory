remDr$findElement(using = "xpath",'/html/body/div[7]/div[2]/div/div[1]/div[1]/div/div/div[1]/div/div/div[3]/hub-download-card//calcite-card/div/calcite-dropdown/calcite-button//button/calcite-icon//svg') -> Element_districtcensushandbook
remDr$findElement(using = "xpath",'//*[@id="ember46"]/div/div/div[1]/div/div/div[3]/hub-download-card//calcite-card/div/calcite-dropdown/calcite-button//button/calcite-icon') -> Element_districtcensushandbook
remDr$findElement(using = "xpath",'//*[@id="ember46"]/div/div/div[1]/div/div/div[3]/hub-download-card//calcite-card/div/calcite-dropdown/calcite-button//button') -> Element_districtcensushandbook
remDr$findElement(using = "xpath",'//*[@id="ember46"]/div/div/div[1]/div/div/div[3]/hub-download-card//calcite-card/div/calcite-dropdown/calcite-button/text()') -> Element_districtcensushandbook
devtools::build()
devtools::submit_cran()
devtools::submit_cran()
devtools::submit_cran()
devtools::submit_cran()
devtools::submit_cran()
devtools::submit_cran()
devtools::submit_cran()
library(nser)
devtools::submit_cran()
library(nser)
library(nser)
?.onAttach
library(nser)
library(nser)
library(nser)
library(nser)
?suppressPackageStartupMessages
library(nser)
library(nser)
library(nser)
library(nser)
?library
library(nser)
library(nser)
library(nser)
?.onLoad
library(nser)
library(devtools)
?load_all
devtools::load_all(c("nser", "googleVis", "jsonlite"), quiet = TRUE)
devtools::load_all(("jsonlite"), quiet = TRUE)
devtools::load_all(jsonlite, quiet = TRUE)
devtools::load_all("jsonlite", quiet = TRUE)
load_all("./", quiet  = T)
library(devtools)
load_all("./", quiet  = T)
library(nser)
optbanknifty = function(x) {
.Deprecated("")
}
optbanknifty()
optbanknifty = function(x) {
.Deprecated("", msg = "The function is no longer available.")
}
optbanknifty
optbanknifty = function(x) {
.Deprecated("The function is no longer available.")
}
optbanknifty
optbanknifty = function(x) {
.Deprecated(new = NULL, msg = "The function is no longer available.")
}
optbanknifty()
optnifty = function(x) {
.Deprecated(new = NULL, msg = "The function is no longer available.")
}
optnifty()
devtools::build_manual()
devtools::build_rmd()
devtools::build_vignettes()
df= data.frame(x,y)
x <- runif(100,1,99)
y <- runif(75,1,99)
df= data.frame(x,y)
cbind(x,y)
df= as.data.frame(x,y)
View(df)
?data.frame
?as.data.frame
df= as.data.frame(x,y, make.names = NA)
View(df)
df= as.data.frame(x,y, make.names = T)
install.packages("qpcR")
n <- max(length(x), length(y))
length(x) <- n
length(y) <- n
cbind(x, y)
df = cbind(x, y)
View(df)
df = data.frame(df)
View(df)
View(df)
aov(x ~ y, df)
library(nlme)
lme(x ~y, df)
?lme
lme(x ~y, data =  df)
lme(x ~y, data =  df, na.action = F)
lme(x ~y, data =  df, na.action = T)
lme(x ~y, data =  df, na.action = na.omit())
lme(x ~y, data =  df, na.action = na.omit(df))
lme(x ~y, data =  df, na.action = na.omit(df$y))
lme(x ~y, data =  df, na.action = na.exclude(df$y))
lme(x ~y, data =  df, na.action = na.exclude(df))
lme(x ~y, data =  df, na.action = na.omit)
lme(x ~y, data =na.omit(df))
View(df)
lme(x ~x, data =na.omit(df))
library(lme4)
?lme4
lmer(x ~ y, df)
dput(df)
aov(x ~ y, df)
View(df)
library(nser)
devtools::build()
usethis::use_pkgdown()
pkgdown::build_site()
pkgdown::build_home()
pkgdown::build_home()
devtools::build_site()
pkgdown::build_home()
install.packages("reprex")
library(reprex)
c(1:3)
reprex()
reprex:::reprex_addin()
reprex:::reprex_addin()
cc = c(1:5)
reprex()
library(reprex)
(y <- 1:4)
mean(y)
reprex()
install.packages("tidyverse")
install.packages("reprex")
install.packages("reprex")
library(reprex)
(y <- 1:4)
mean(y)
reprex()
reprex_document()
reprex()
vv = 3
fgfg
fgf = l
fgfg = 7
reprex()
(y <- 1:4)
mean(y)
reprex()
ff = 7
dfdf = 45
reprex()
sdsd = 7
ksk = 5.
kks= 55
reprex()
dd = 77
dfdf = 10
dd/dfdf
reprex()
install.packages("reprex")
install.packages("reprex")
detach("package:reprex", unload = TRUE)
install.packages("reprex")
(y <- 1:4)
mean(y)
reprex()
library(reprex)
reprex()
library(reprex)
reprex()
reprex(mean(rnorm(10)))
pkgdown::build_site()
reprex(pkgdown::build_site())
reprex()
pkgdown::build_site()
reprex()
reprex(pkgdown::build_site())
reprex(pkgdown::build_site(), session_info = TRUE)
detach("package:reprex", unload = TRUE)
devtools::install_github("tidyverse/reprex")
devtools::install_github("tidyverse/reprex")
getwd()
?stringr::str_replace_all
stringr::str_replace_all(getwd(), '/', '\\')
aa = getwd()
stringr::str_replace_all(aa, '/', '\\')
stringr::str_replace_all(aa, '/', '\\\')
stringr::str_replace_all(aa, '/', '\\\\')
stringr::str_replace_all(getwd(), '/', '\\\\')
library(nser)
bhavtoday()
library(readr)
dat <- read_csv("dat.csv")
View(dat)
library(readr)
dat <- read_csv("dat.csv")
View(dat)
library(readr)
dat <- read_csv("dat.csv")
View(dat)
dat$DATE = lubridate::dmy(dat$DATE)
View(dat)
View(dat)
dat = dat[order(as.Date(dat$DATE, format="%d-%b-%Y")),]
View(dat)
a1 = data.frame(date = ymd(dat$DATE))
a1 = data.frame(date = lubridate::ymd(dat$DATE))
View(a1)
View(dat)
a1 = a1 %>% mutate(week = cut.Date(a1$date, breaks = "1 week", labels = FALSE)) %>% arrange(a1$date)
library(tidyverse)
a1 = a1 %>% mutate(week = cut.Date(a1$date, breaks = "1 week", labels = FALSE)) %>% arrange(a1$date)
View(a1)
dat2 = cbind.data.frame(dat, a1)
View(dat2)
dat2 = dat2 %>% mutate(week = as.factor(x$week))
dat2 = dat2 %>% mutate(week = as.factor(dat2$week))
View(dat2)
dat3 = split(dat2, dat2$week)
View(dat3)
dat3 = unlist(dat3)
dat3 = unlist(dat3, recursive = F)
dat3 = split(dat2, dat2$week)
op = lapply(dat3, function(x) head(x$OPEN))
View(op)
op = lapply(dat3, function(x) head(x$OPEN, 1))
View(op)
View(dat)
View(dat2)
cl = lapply(dat3, function(x) head(x$CLOSE, 1))
op = lapply(dat3, function(x) head(x$OPEN, 1))
op = unlist(op)
cl = lapply(dat3, function(x) head(x$CLOSE, 1))
cl = unlist(cl)
hp = lapply(dat3, function(x) max(x$HIGH))
hp = unlist(hp)
lp = lapply(dat3, function(x) min(x$LOW))
lp = unlist(lp)
dat4  = cbind(OPEN = op, HIGH = hp, LOW = lp, CLOSE = cl)
View(dat4)
dat4  = cbind.data.frame(OPEN = op, HIGH = hp, LOW = lp, CLOSE = cl)
View(dat4)
sym = head(dat$Symbol, 1)
dat4  = cbind.data.frame(SYMBOL = rep(sym), OPEN = op, HIGH = hp, LOW = lp, CLOSE = cl)
View(dat4)
dat4  = cbind.data.frame(SYMBOL = rep(sym), OPEN = op, HIGH = hp, LOW = lp, CLOSE = cl, WEEK = dat2$week)
View(dat2)
View(dat2)
dat2 = dat2 %>% mutate(weekno = aweek::isoweek(ymd(dat2$DATE)))
library(aweek)
dat2 = dat2 %>% mutate(weekno = isoweek(ymd(dat2$DATE)))
library(FluMoDL)
dat2 = dat2 %>% mutate(weekno = isoweek(ymd(dat2$DATE)))
library(lubridate)
library(tidyverse)
library(FluMoDL)
dat2 = dat2 %>% mutate(weekno = isoweek(ymd(dat2$DATE)))
View(dat2)
dat2 = dat2 %>% mutate(weekno = isoweek(ymd(dat2$DATE)))
dat2 = dat2 %>% mutate(year = year(ymd(x$date)))
dat2 = dat2 %>% mutate(year = year(ymd(dat2$date)))
View(dat2)
library(aweek)
dat2 = dat2 %>% mutate(weekstartdate = aweek::get_date(week = x$weekno, year = x$year))
dat2 = dat2 %>% mutate(weekstartdate = aweek::get_date(week = dat2$weekno, year = dat2$year))
View(dat2)
dat2 = dat2 %>%  mutate(weekenddate = ceiling_date(ymd(dat2$DATE), "week") - days(2))
View(dat2)
dat3 = split(dat2, dat2$week)
op = lapply(dat3, function(x) head(x$OPEN, 1))
op = unlist(op)
cl = lapply(dat3, function(x) head(x$CLOSE, 1))
cl = unlist(cl)
hp = lapply(dat3, function(x) max(x$HIGH))
hp = unlist(hp)
lp = lapply(dat3, function(x) min(x$LOW))
lp = unlist(lp)
sym = head(dat$Symbol, 1)
dat4  = cbind.data.frame(SYMBOL = rep(sym), OPEN = op, HIGH = hp, LOW = lp, CLOSE = cl)
View(dat4)
View(dat3)
View(dat3[["1"]])
dat3
weekstartdate = lapply(dat3, function(x) head(x$weekstartdate),1)
weekstartdate = lapply(dat3, function(x) head(x$weekstartdate,1))
weekenddate = lapply(dat3, function(x) head(x$weekenddate,1))
weekstartdate = lapply(dat3, function(x) head(x$weekstartdate,1))
weekstartdate = unlist(weekstartdate)
weekenddate = lapply(dat3, function(x) head(x$weekenddate,1))
weekenddate = unlist(weekenddate)
dat4  = cbind.data.frame(SYMBOL = rep(sym), OPEN = op, HIGH = hp, LOW = lp, CLOSE = cl, weekstartdate, weekenddate)
View(dat4)
weekstartdate = lapply(dat3, function(x) head(x$weekstartdate,1))
View(weekstartdate)
weekstartdate = unlist(weekstartdate, recursive = F)
weekstartdate = lapply(dat3, function(x) head(x$weekstartdate,1))
weekstartdate = unlist(weekstartdate, recursive = T)
weekstartdate = weekstartdate %>% purrr::reduce(weekstartdate)
weekstartdate = as.Date(weekstartdate) %>% purrr::reduce()
weekstartdate = as.Date(weekstartdate) %>% purrr::reduce(as.Date(weekstartdate))
weekstartdate = purrr::reduce(as.Date(weekstartdate))
as.Date(weekstartdate)
weekstartdate = lapply(dat3, function(x) head(x$weekstartdate,1))
weekstartdate = weekstartdate %>% purrr::reduce(as.Date(c))
weekstartdate = weekstartdate %>% purrr::reduce(c)
weekenddate = lapply(dat3, function(x) head(x$weekenddate,1))
weekenddate = weekenddate %>% purrr::reduce(c)
dat4  = cbind.data.frame(SYMBOL = rep(sym), OPEN = op, HIGH = hp, LOW = lp, CLOSE = cl, weekstartdate = weekstartdate, weekenddate = weekenddate)
View(dat4)
View(dat4)
View(dat3)
View(dat3[["1"]])
dat2 = dat2 %>% mutate(weekstartdate = head(x$DATE,1)))
dat2 = dat2 %>% mutate(weekstartdate = head(x$DATE,1))
library(lubridate)
library(tidyverse)
dat2 = dat2 %>% mutate(weekstartdate = head(x$DATE,1))
dat2 = dat2 %>% mutate(weekstartdate = head(DATE,1))
dat2 = dat2 %>%  mutate(weekenddate = tail(DATE, 1))
library(readr)
dat <- read_csv("dat.csv")
View(dat)
library(lubridate)
library(tidyverse)
library(readr)
dat <- read_csv("dat.csv")
View(dat)
dat$DATE = lubridate::dmy(dat$DATE)
View(dat)
dat = dat[order(as.Date(dat$DATE, format="%d-%b-%Y")),]
a1 = data.frame(date = lubridate::ymd(dat$DATE))
a1 = a1 %>% mutate(week = cut.Date(a1$date, breaks = "1 week", labels = FALSE)) %>% arrange(a1$date)
dat2 = cbind.data.frame(dat, a1)
dat2 = dat2 %>% mutate(week = as.factor(dat2$week))
dat2 = dat2 %>% mutate(weekno = isoweek(ymd(dat2$DATE)))
dat2 = dat2 %>% mutate(year = year(ymd(dat2$date)))
dat2 = dat2 %>% mutate(weekstartdate = head(DATE,1))
dat2 = dat2 %>%  mutate(weekenddate = tail(DATE, 1))
dat3 = split(dat2, dat2$week)
op = lapply(dat3, function(x) head(x$OPEN, 1))
op = unlist(op)
cl = lapply(dat3, function(x) head(x$CLOSE, 1))
cl = unlist(cl)
hp = lapply(dat3, function(x) max(x$HIGH))
hp = unlist(hp)
lp = lapply(dat3, function(x) min(x$LOW))
lp = unlist(lp)
sym = head(dat$SYMBOL, 1)
dat4  = cbind.data.frame(SYMBOL = rep(sym), OPEN = op, HIGH = hp, LOW = lp, CLOSE = cl, weekstartdate = weekstartdate, weekenddate = weekenddate)
View(dat2)
weekstartdate = dat2 %>% mutate(weekstartdate = head(DATE,1))
View(weekstartdate)
weekstartdate = lapply(dat3, function(x) mutate(weekstartdate = head(x$DATE,1)))
weekstartdate = lapply(dat3, function(x) head(x$DATE,1))
View(weekstartdate)
weekenddate = lapply(dat3, function(x) tail(x$DATE, 1))
weekstartdate = lapply(dat3, function(x) head(x$DATE,1))
weekstartdate = unlist(weekstartdate)
weekenddate = lapply(dat3, function(x) tail(x$DATE, 1))
weekenddate = unlist(weekenddate)
sym = head(dat$SYMBOL, 1)
dat4  = cbind.data.frame(SYMBOL = rep(sym), OPEN = op, HIGH = hp, LOW = lp, CLOSE = cl, weekstartdate = weekstartdate, weekenddate = weekenddate)
View(dat4)
weekstartdate = lapply(dat3, function(x) head(x$DATE,1))
weekstartdate = weekstartdate %>%  purr::reduc(c)
weekstartdate = weekstartdate %>% purrr::reduce(c)
weekenddate = weekenddate %>% purrr::reduce(c)
weekenddate = lapply(dat3, function(x) tail(x$DATE, 1))
weekenddate = weekenddate %>% purrr::reduce(c)
sym = head(dat$SYMBOL, 1)
dat4  = cbind.data.frame(SYMBOL = rep(sym), OPEN = op, HIGH = hp, LOW = lp, CLOSE = cl, weekstartdate = weekstartdate, weekenddate = weekenddate)
View(dat4)
View(dat4)
View(dat4)
library(nser)
bhavtoday()
library(readr)
dat <- read_csv("dat.csv")
View(dat)
dat$DATE = lubridate::dmy(dat$DATE)
dat = dplyr::arrange(dat, DATE)
View(dat)
usethis:: use_data(dat, compress = "xz")
library(readr)
dat <- read_csv("dat.csv")
View(dat)
View(dat)
usethis:: use_data(dat, compress = "xz")
#' @importFrom lubridate dmy ymd
#' @importFrom dplyr arrange
#' @importFrom purrr reduce
#' @export
#'
#' @examples \dontrun{
#' report = bhav("01072021") # Download bhavcopy for 01 July 2021
#' head(report)
#' }
#'
daytoweek = function(x){
dat$DATE = dmy(dat$DATE)
dat = arrange(dat, DATE)
a1 = data.frame(date = ymd(dat$DATE))
a1 = a1 %>% mutate(week = cut.Date(a1$date, breaks = "1 week", labels = FALSE)) %>% arrange(a1$date)
dat2 = cbind.data.frame(dat, a1)
dat2 = dat2 %>% mutate(week = as.factor(dat2$week))
dat2 = dat2 %>% mutate(weekno = isoweek(ymd(dat2$DATE)))
dat2 = dat2 %>% mutate(year = year(ymd(dat2$date)))
dat3 = split(dat2, dat2$week)
op = lapply(dat3, function(x) head(x$OPEN, 1))
op = unlist(op)
cl = lapply(dat3, function(x) head(x$CLOSE, 1))
cl = unlist(cl)
hp = lapply(dat3, function(x) max(x$HIGH))
hp = unlist(hp)
lp = lapply(dat3, function(x) min(x$LOW))
lp = unlist(lp)
weekstartdate = lapply(dat3, function(x) head(x$DATE,1))
weekstartdate = weekstartdate %>% purrr::reduce(c)
weekenddate = lapply(dat3, function(x) tail(x$DATE, 1))
weekenddate = weekenddate %>% purrr::reduce(c)
sym = head(dat$SYMBOL, 1)
dat4  = cbind.data.frame(SYMBOL = rep(sym), OPEN = op, HIGH = hp, LOW = lp, CLOSE = cl, weekstartdate = weekstartdate, weekenddate = weekenddate)
return(dat4)
}
daytoweek(dat)
library(lubridate)
library(dplyr)
daytoweek(dat)
data(dat)
usethis::use_vignette("")
usethis::use_vignette("daytoweek")
install.packages(c("asremlPlus", "blogdown", "cpp11", "dae", "data.table", "DescTools", "DT", "e1071", "emmeans", "googleAnalyticsR", "Hmisc", "hms", "htmltools"))
library(nser)
#' @importFrom utils download.file read.csv unzip
#' @importFrom lubridate dmy ymd
#' @importFrom dplyr arrange
#' @importFrom purrr reduce
#' @export
#' @examples \dontrun{
#' data(dat)
#' daytoweek(dat)
#' }
#'
daytoweek = function(x){
dat$DATE = dmy(dat$DATE)
dat = arrange(dat, DATE)
a1 = data.frame(date = ymd(dat$DATE))
a1 = a1 %>% mutate(week = cut.Date(a1$date, breaks = "1 week", labels = FALSE)) %>% arrange(a1$date)
dat2 = cbind.data.frame(dat, a1)
dat2 = dat2 %>% mutate(week = as.factor(dat2$week))
dat2 = dat2 %>% mutate(weekno = isoweek(ymd(dat2$DATE)))
dat2 = dat2 %>% mutate(year = year(ymd(dat2$date)))
dat3 = split(dat2, dat2$week)
op = lapply(dat3, function(x) head(x$OPEN, 1))
op = unlist(op)
cl = lapply(dat3, function(x) head(x$CLOSE, 1))
cl = unlist(cl)
hp = lapply(dat3, function(x) max(x$HIGH))
hp = unlist(hp)
lp = lapply(dat3, function(x) min(x$LOW))
lp = unlist(lp)
weekstartdate = lapply(dat3, function(x) head(x$DATE,1))
weekstartdate = weekstartdate %>% purrr::reduce(c)
weekenddate = lapply(dat3, function(x) tail(x$DATE, 1))
weekenddate = weekenddate %>% purrr::reduce(c)
sym = head(dat$SYMBOL, 1)
dat4  = cbind.data.frame(SYMBOL = rep(sym), OPEN = op, HIGH = hp, LOW = lp, CLOSE = cl, weekstartdate = weekstartdate, weekenddate = weekenddate)
return(dat4)
}
library(nser)
library(nser)
library(nser)
daytoweek
library(nser)
library(lubridate)
?isoweek
library(purrr)
library(nser)
usethis::use_vignette('dat')
library(readr)
dat <- read_csv("G:/nser/dat.csv")
View(dat)
View(dat)
dailydata = dat
rm9dat
rm(dat)
usethis::use_data_raw('dailydata')
library(nser)
data(dailydata)
library(readr)
dailydata <- read_csv("G:/nser/dat.csv")
View(dailydata)
library(usethis)
?use_data
usethis::use_data(dailydata)
library(readr)
dailydata <- read_csv("G:/nser/dat.csv")
View(dailydata)
save(dailydata, file="data/dailydata.RData")
library(readr)
dailydata <- read_csv("G:/nser/dat.csv")
View(dailydata)
save(dailydata, file = "dailydata.RData", version = 2)
library(nser)
library(nser)
devtools::build()
devtools::build_manual()
pkgbuild::build()
pkgdown::build_home()
pkgdown::build_site()
pkgdown::build_tutorials()
devtools::build_site()
devtools::build_vignettes()
devtools::submit_cran()
